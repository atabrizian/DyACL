{"name":"DyACL","tagline":"A Database deriven ACL","body":"# DyACL\r\n=====\r\n\r\nThis is a really simple implementation of ACL.\r\n\r\n### DEFINITIONS:\r\n\r\n**Visitor**: Somebody who visits a page in your website.\r\n\r\n**User**: A visitor who is a member of your website.\r\n\r\n**Role**: A role of a visitor in your website. Roles are known as groups of users.\r\n\r\n**Resource**: What ever stuff in your website that a permission can be applied to.\r\nIt can be a controller, method in your controller, special function, a file, a directory,\r\nand etc.\r\n\r\n**Action**: An action is the way a visitor accesses a part of your site it can include Create,Read (View), Update , Delete or anything else.\r\n\r\n**Rule**: A rule about who can access what and how.\r\n\r\nI've put a sample sql file named \"DyACL.sql\" in this repository to show you how to arrange\r\nthese thing in your database.\r\n\r\n**Remember** that this library does need just an array of anything so you're not forced to use\r\ndatabase. You can put your roles, resources, etc in a file or an array and give that to the\r\nlibrary. Rules also can be loaded from database or even created on fly.\r\n\r\n### HOW IT WORKS:\r\n\r\n1. Library should be loaded whether by including it into the file or with help from\r\ncomposer.\r\n2. Find out who is visiting your website. Each and every user even a guest should have an\r\nID that will help you differenciate one from another.\r\n3. Every user has at least one role and as many roles you desire is possible. Roles are\r\ndifferent according to each site. It can be as simple as \"Administrator, manager, user\" or\r\nit can be as complex as roles are defined by administrator on fly. But it makes no\r\ndifference because you store these in \"roles\" table and when you find out what is your\r\nusers ID it's as easy as a simple database query. Selected the roles from database define\r\ntheme for library by \"setRoles\" function:\r\n\r\n```\r\n$roles = array(); // here assign what you selected from \"roles\" table\r\n\r\n$dyacl = new DyACL();\r\n$dyacl->setRoles($roles);\r\n```\r\n\r\nif there is an special role that you desire to be added on fly add it by \"setRole\" function.\r\nFor example you have a role named \"admin\" and you want to assign it to this user:\r\n\r\n```\r\n$dyacl->setRole(\"admin\");\r\n```\r\n\r\n4. When you have a list of current user's roles you can select these roles' \"Rules\" from\r\nit's table. After that define these rules for the library by \"setRules\" function.\r\n\r\n```\r\n$rules = array();// here assign the rules you selected from database.\r\n\r\n$dyacl->setRules($rules);\r\n```\r\n\r\nThe library will define every resource that is mentioned by rules for itself so you do\r\nnot need to define any resources. Access to a resource that is unknown for the library\r\nwould be denied by default. In case you need to define any rule on fly go on and use\r\n\"setRule\" function. Each \"rule\" consists of a \"resource\" name, a \"privilege\", for which\r\nthe possible values are 'allow' and 'deny', and finally an \"action\" which is by default\r\n\"all\" which means user is allowed to do whatever is possible or you can assign an\r\naction such as \"view\",\r\nFor example you want to deny any access to a folder named \"secrets\":\r\n\r\n```\r\n$dyacl->setRule(\"secrets\", DyACL::DENY);\r\n```\r\n\r\nor you want to allow all access but deleting:\r\n\r\n```\r\n$dyacl->setRule(\"secrets\", DyACL::ALLOW);\r\n$dyacl->setRule(\"secrets\", DyACL::DENY, \"delete\");\r\n```\r\n\r\nor you want to deny all but viewing:\r\n\r\n```\r\n$dyacl->setRule(\"secrets\", DyACL::DENY);\r\n$dyacl->setRule(\"secrets\", DyACL::ALLOW, \"view\");\r\n```\r\n\r\nRemeber that DyACL::DENY is equal to \"deny\" and DyACL::ALLOW is equal to \"allow\".\r\n\r\n5. Finally checking whether user has access to a resource or not is possible by \"isAllowed\"\r\nfunction:\r\nFor example after all this you want to check whether allow access to the folder \"secrets\"\r\nor not:\r\n\r\n```\r\nif ($dyacl->isAllowed(\"secrets\") {\r\n    echo \"Yes, you are allowed\";\r\n}\r\nelse {\r\n    echo \"Access Denied!\";\r\n}\r\n```\r\n\r\nOR maybe you want to check whether the user is allowed to delete the folder \"secrets\":\r\n\r\n```\r\nif ($dyacl->isAllowed(\"secrets\", \"delete\") {\r\n    echo \"Yes, you are allowed\";\r\n}\r\nelse {\r\n    echo \"Access Denied!\";\r\n}\r\n```\r\n\r\n### A COMPLETE SAMPLE:\r\n\r\n    coming soon...\r\n\r\n### FAQ:\r\n\r\n-Q: What happens if a \"role\" denies access to a resource but another one allows it?\r\n\r\n-A: The result will be \"allow\".\r\n\r\n\r\n-Q: Do I need to define each and every resource?!\r\n\r\n-A: NO. There may be lots of resources defined in your database. Loading all that can\r\nuse lots of memory or may be impossible for large projects. You just load specific rules\r\nthat are related to current user and the library will handle all the rest.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}